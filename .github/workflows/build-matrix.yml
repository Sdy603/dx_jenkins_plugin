name: Build Jenkins Plugin (Matrix)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      runner:
        description: 'Runner type'
        required: false
        default: 'ubuntu-latest'
        type: choice
        options:
          - ubuntu-latest

jobs:
  build:
    runs-on: ${{ github.event.inputs.runner || 'ubuntu-latest' }}
    
    strategy:
      matrix:
        java-version: [11,17]
        maven-version: ['3.9.9']
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Verify Maven and Java versions
      run: |
        java -version
        mvn -version

    - name: Compile and package Jenkins plugin
      run: mvn clean package -DskipTests=false

    - name: Run tests
      run: mvn test

    - name: Upload HPI artifact
      uses: actions/upload-artifact@v4
      with:
        name: dx-data-sharer-plugin-java${{ matrix.java-version }}
        path: target/dx-data-sharer.hpi
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java${{ matrix.java-version }}
        path: target/surefire-reports/
        retention-days: 7

    - name: Verify HPI file
      run: |
        echo "Generated HPI file details:"
        ls -la target/dx-data-sharer.hpi
        echo "File size: $(wc -c < target/dx-data-sharer.hpi) bytes"
        echo "Java version: ${{ matrix.java-version }}"
        echo "Runner: ${{ runner.os }}"

    - name: Get version from POM
      id: version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Create Release on Tag (Java 11 only)
      if: startsWith(github.ref, 'refs/tags/') && matrix.java-version == '11'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          target/dx-data-sharer.hpi
          target/dx-data-sharer.jar
        name: Release ${{ github.ref_name }}
        body: |
          ## DX Data Sharer Jenkins Plugin - ${{ github.ref_name }}
          
          This release contains the compiled Jenkins plugin for DX Data Sharing.
          
          ### Installation
          1. Download the `dx-data-sharer.hpi` file
          2. In Jenkins, go to "Manage Jenkins" → "Plugins" → "Advanced Settings"
          3. Upload the HPI file under "Deploy Plugin"
          4. Restart Jenkins
          
          ### Files
          - `dx-data-sharer.hpi` - Jenkins plugin file for installation
          - `dx-data-sharer.jar` - Plugin JAR file
          
          ### Build Info
          - Java version: ${{ matrix.java-version }}
          - Maven version: ${{ matrix.maven-version }}
          - Built from commit: ${{ github.sha }}
          - Runner: ${{ runner.os }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'SNAPSHOT') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Packages (Main branch, Java 11 only)
      if: github.ref == 'refs/heads/main' && matrix.java-version == '11'
      run: |
        mvn deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}