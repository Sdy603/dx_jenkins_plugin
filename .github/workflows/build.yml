name: Build Jenkins Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: isg-ocp-x86-medium
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Set up Maven 3.9.9
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        maven-version: '3.9.9'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Compile and package Jenkins plugin
      run: mvn clean package -DskipTests=false

    - name: Run tests
      run: mvn test

    - name: Upload HPI artifact
      uses: actions/upload-artifact@v3
      with:
        name: dx-data-sharer-plugin
        path: target/dx-data-sharer.hpi
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        retention-days: 7

    - name: Verify HPI file
      run: |
        echo "Generated HPI file details:"
        ls -la target/dx-data-sharer.hpi
        echo "File size: $(stat -f%z target/dx-data-sharer.hpi 2>/dev/null || stat -c%s target/dx-data-sharer.hpi) bytes"

    - name: Get version from POM
      id: version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Create Release on Tag
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/dx-data-sharer.hpi
          target/dx-data-sharer.jar
        name: Release ${{ github.ref_name }}
        body: |
          ## DX Data Sharer Jenkins Plugin - ${{ github.ref_name }}
          
          This release contains the compiled Jenkins plugin for DX Data Sharing.
          
          ### Installation
          1. Download the `dx-data-sharer.hpi` file
          2. In Jenkins, go to "Manage Jenkins" → "Plugins" → "Advanced Settings"
          3. Upload the HPI file under "Deploy Plugin"
          4. Restart Jenkins
          
          ### Files
          - `dx-data-sharer.hpi` - Jenkins plugin file for installation
          - `dx-data-sharer.jar` - Plugin JAR file
          
          Built from commit: ${{ github.sha }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'SNAPSHOT') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to GitHub Packages (Maven Repository)
      if: github.ref == 'refs/heads/main'
      run: |
        mvn deploy -DskipTests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}